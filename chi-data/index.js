// Generated by CoffeeScript 1.7.1
(function() {
  var BubbleChart, root,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  BubbleChart = (function() {
    function BubbleChart(data) {
      this.hide_details = __bind(this.hide_details, this);
      this.show_details = __bind(this.show_details, this);
      this.move_towards_center = __bind(this.move_towards_center, this);
      this.update = __bind(this.update, this);
      this.remove_nodes = __bind(this.remove_nodes, this);
      this.add_nodes = __bind(this.add_nodes, this);
      this.toggleField = __bind(this.toggleField, this);
      this.data = data;
      this.width = 940;
      this.height = 700;
      this.tooltip = CustomTooltip("player_tooltip", 130);
      this.vis = d3.select("#vis").append("svg").attr("width", this.width).attr("height", this.height);
      this.force = d3.layout.force().gravity(-0.01).charge(function(d) {
        return -Math.pow(d.radius, 2.0) / 8;
      }).size([this.width, this.height]);
      this.nodes = this.force.nodes();
      this.do_teams();
      this.do_schools();
    }

    BubbleChart.prototype.do_teams = function() {
      this.teams = [];
      this.data.forEach((function(_this) {
        return function(d) {
          if (_this.teams.indexOf(d.team) < 0) {
            return _this.teams.push(d.team);
          }
        };
      })(this));
      d3.select("#team-select").selectAll('option').data(this.teams).enter().append("option").attr("value", function(d) {
        return d;
      }).text(function(d) {
        return d;
      });
      return $("#team-select").select2({
        placeholder: 'Select a Team',
        width: 'resolve'
      }).on("change", (function(_this) {
        return function(e) {
          return _this.toggleField('team', e);
        };
      })(this));
    };

    BubbleChart.prototype.do_schools = function() {
      this.schools = [];
      this.data.forEach((function(_this) {
        return function(d) {
          if (_this.schools.indexOf(d.school) < 0) {
            return _this.schools.push(d.school);
          }
        };
      })(this));
      d3.select("#school-select").selectAll('option').data(this.schools).enter().append("option").attr("value", function(d) {
        return d;
      }).text(function(d) {
        return d;
      });
      return $("#school-select").select2({
        placeholder: 'Select a School',
        width: 'resolve'
      }).on("change", (function(_this) {
        return function(e) {
          return _this.toggleField('school', e);
        };
      })(this));
    };

    BubbleChart.prototype.toggleField = function(field, e) {
      if (typeof e.added !== 'undefined') {
        return this.add_nodes(field, e.added.id);
      } else if (typeof e.removed !== 'undefined') {
        return this.remove_nodes(field, e.removed.id);
      }
    };

    BubbleChart.prototype.add_nodes = function(field, val) {
      this.data.forEach((function(_this) {
        return function(d) {
          var node;
          if (d[field] === val) {
            node = {
              id: d.id,
              radius: 8,
              name: d.name,
              team: d.team,
              school: d.school,
              position: d.position,
              x: Math.random() * 900,
              y: Math.random() * 800
            };
            return _this.nodes.push(node);
          }
        };
      })(this));
      return this.update();
    };

    BubbleChart.prototype.remove_nodes = function(field, val) {
      var len;
      len = this.nodes.length;
      while (len--) {
        if (this.nodes[len][field] === val) {
          this.nodes.splice(len, 1);
        }
      }
      return this.update();
    };

    BubbleChart.prototype.update = function() {
      var that;
      this.circles = this.vis.selectAll("circle").data(this.nodes, function(d) {
        return d.id;
      });
      that = this;
      this.circles.enter().append("circle").attr("r", 0).attr("stroke-width", 3).attr("id", function(d) {
        return "bubble_" + d.id;
      }).attr("class", function(d) {
        return d.team.toLowerCase().replace(/\s/g, '_');
      }).on("mouseover", function(d, i) {
        return that.show_details(d, i, this);
      }).on("mouseout", function(d, i) {
        return that.hide_details(d, i, this);
      });
      this.circles.transition().duration(2000).attr("r", function(d) {
        return d.radius;
      });
      this.circles.exit().remove();
      this.force.on("tick", (function(_this) {
        return function(e) {
          return _this.circles.each(_this.move_towards_center(e.alpha)).attr("cx", function(d) {
            return d.x;
          }).attr("cy", function(d) {
            return d.y;
          });
        };
      })(this));
      return this.force.start();
    };

    BubbleChart.prototype.move_towards_center = function(alpha) {
      return (function(_this) {
        return function(d) {
          d.x = d.x + (_this.width / 2.0 - d.x) * 0.1 * alpha;
          return d.y = d.y + (_this.height / 2.0 - d.y) * 0.1 * alpha;
        };
      })(this);
    };

    BubbleChart.prototype.show_details = function(data, i, element) {
      var content;
      content = "" + data.name + "<br/>";
      content += "" + data.team + "<br/>";
      content += "" + data.school + "<br/>";
      content += "" + data.position;
      return this.tooltip.showTooltip(content, d3.event);
    };

    BubbleChart.prototype.hide_details = function(data, i, element) {
      return this.tooltip.hideTooltip();
    };

    return BubbleChart;

  })();

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  $(function() {
    var chart, render_vis;
    chart = null;
    render_vis = function(csv) {
      return chart = new BubbleChart(csv);
    };
    return d3.csv("data/players.csv", render_vis);
  });

}).call(this);
